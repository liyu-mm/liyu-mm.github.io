<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>ES6语法大全</title>
      <link href="/archives/1.html"/>
      <url>/archives/1.html</url>
      
        <content type="html"><![CDATA[<h2 id="ES6语法大全"><a href="#ES6语法大全" class="headerlink" title="ES6语法大全"></a>ES6语法大全</h2><h1 id="let-const"><a href="#let-const" class="headerlink" title="let const"></a>let const</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">let a = 23;  // 块级作用域变量const b = 21;  // 只要赋值就不能被修改// b = 24;  // 不可修改console.log(a, b)</span><br></pre></td></tr></table></figure><h1 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">class Animal &#123;    // 初始化方法    constructor()&#123;        // this就是实例化对象        this.type = &#x27;animal&#x27;    &#125;    // 实例方法    says(say)&#123;        console.log(this.type + &#x27; says &#x27; + say)    &#125;&#125;let animal = new Animal()animal.says(&#x27;hello&#x27;) //animal says hello// 继承父类Animalclass Cat extends Animal &#123;    constructor()&#123;        // 调用父类的方法        super()        this.type = &#x27;cat&#x27;    &#125;&#125;let cat = new Cat()cat.says(&#x27;hello&#x27;) //cat says hello</span><br></pre></td></tr></table></figure><p>案例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">class Student&#123;    constructor(name, age) &#123;        this.name = name        this.age = age    &#125;    sayName()&#123;        return &#x27;我是&#x27; + this.name + &#x27;, 今年&#x27; + this.age    &#125;&#125;let zhangsan = new Student(&#x27;张三&#x27;, 32)console.log(zhangsan.sayName())</span><br></pre></td></tr></table></figure><p>这样一对比，是不是和python的面向对象很像</p><h1 id="箭头函数"><a href="#箭头函数" class="headerlink" title="箭头函数"></a>箭头函数</h1><p>简单的说，就是省去了function</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">function getName()&#123;    return &#x27;我是张三&#x27;&#125;let get_name = ()=&gt;&#123;    return &#x27;我是新张三&#x27;&#125;console.log(getName())console.log(get_name())</span><br></pre></td></tr></table></figure><p>对于回调函数，箭头函数是大大的方便</p><p>箭头函数可以处理this指向的问题</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">class Student &#123;    constructor(name, age) &#123;        this.name = name        this.age = age    &#125;    sayName() &#123;        setTimeout(function () &#123;            // 无法拿到实例化对象的那个this            console.log(&#x27;function： 我是&#x27; + this.name + &#x27;, 今年&#x27; + this.age)        &#125;, 1000)        setTimeout(() =&gt; &#123;            // 可以拿到实例化对象的那个this            console.log(&#x27;arrow function： 我是&#x27; + this.name + &#x27;, 今年&#x27; + this.age)        &#125;, 1000)    &#125;&#125;let zhangsan = new Student(&#x27;张三&#x27;, 32)zhangsan.sayName()</span><br></pre></td></tr></table></figure><p>之前我们是如何解决this执行问题的呢？</p><ol><li>第一种是将this传给self,再用self来指代this</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sayName() &#123;    let self = this    setTimeout(function () &#123;        // 无法拿到实例化对象的那个this        console.log(&#x27;function： 我是&#x27; + self.name + &#x27;, 今年&#x27; + self.age)    &#125;, 1000)&#125;</span><br></pre></td></tr></table></figure><ol><li>第二种方法是用<code>bind(this)</code>, 即</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sayName() &#123;    setTimeout(function () &#123;        // 无法拿到实例化对象的那个this        console.log(&#x27;function： 我是&#x27; + this.name + &#x27;, 今年&#x27; + this.age)    &#125;.bind(this), 1000)&#125;</span><br></pre></td></tr></table></figure><h1 id="模板字符串"><a href="#模板字符串" class="headerlink" title="模板字符串"></a>模板字符串</h1><p>之前的字符串拼接输出都是这样的，非常不方便</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">console.log(&#x27;arrow function： 我是&#x27; + this.name + &#x27;, 今年&#x27; + this.age)</span><br></pre></td></tr></table></figure><p>现在，可以直接这样进行输出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">console.log(`function： 我是$&#123;this.name&#125;，今年$&#123;this.age&#125;岁了`)</span><br></pre></td></tr></table></figure><p>和python很像有木有，注意是反引号哈</p><h1 id="解构赋值"><a href="#解构赋值" class="headerlink" title="解构赋值"></a>解构赋值</h1><p>如果我们要构造一个js对象，它的键和值相同</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">let cat = &#x27;ken&#x27;let dog = &#x27;lili&#x27;let zoo = &#123;cat: cat, dog: dog&#125;console.log(zoo)  //Object &#123;cat: &quot;ken&quot;, dog: &quot;lili&quot;&#125;</span><br></pre></td></tr></table></figure><p>在es6中只需要</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">let cat = &#x27;ken&#x27;let dog = &#x27;lili&#x27;let zoo = &#123;cat, dog&#125;console.log(zoo)  //Object &#123;cat: &quot;ken&quot;, dog: &quot;lili&quot;&#125;</span><br></pre></td></tr></table></figure><p>注意：必须是键和值相同才能用这个方法</p><p>反过来取对象中的值也是如此</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">let obj = &#123;    name: &#x27;张三&#x27;,    age: 31&#125;let &#123;name, age&#125; = objconsole.log(name, age)  // 张三 31</span><br></pre></td></tr></table></figure><h1 id="默认参数"><a href="#默认参数" class="headerlink" title="默认参数"></a>默认参数</h1><p>默认参数很简单，意思就是默认值。大家可以看下面的例子，调用<code>animal()</code>方法时忘了传参数，传统的做法就是加上这一句<code>type = type || &#39;cat&#39;</code> 来指定默认值。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">function animal(type)&#123;    type = type || &#x27;cat&#x27;      console.log(type)&#125;animal()</span><br></pre></td></tr></table></figure><p>但是时代变了，es6可以直接指定默认值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">function animal(type = &#x27;cat&#x27;) &#123;    console.log(type)&#125;animal()</span><br></pre></td></tr></table></figure><h1 id="多余参数"><a href="#多余参数" class="headerlink" title="多余参数"></a>多余参数</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">function fun(a, ...type) &#123;    console.log(a, type)  // 1 [ 2, 3, 1 ]&#125;fun(1, 2, 3, 1)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Es6 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用命令部署django项目</title>
      <link href="/archives/1.html"/>
      <url>/archives/1.html</url>
      
        <content type="html"><![CDATA[<h2 id="使用命令部署django项目"><a href="#使用命令部署django项目" class="headerlink" title="使用命令部署django项目"></a>使用命令部署django项目</h2><p> <em>python</em> <em>Django</em> <em>项目部署</em></p><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><p>在服务器上，需要准备一些部署必备的工作</p><p>已安装的忽略</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git  mysqlnginxpython3</span><br></pre></td></tr></table></figure><h2 id="在本机上的准备工作"><a href="#在本机上的准备工作" class="headerlink" title="在本机上的准备工作"></a>在本机上的准备工作</h2><h3 id="导出第三方模块"><a href="#导出第三方模块" class="headerlink" title="导出第三方模块"></a>导出第三方模块</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip freeze &gt; requirements.txt</span><br></pre></td></tr></table></figure><h3 id="收集静态资源"><a href="#收集静态资源" class="headerlink" title="收集静态资源"></a>收集静态资源</h3><p>在django中，如果DEBUG=True，那么django会帮我们完成静态资源的分发</p><p>但是，实际项目上线，我们不需要django为我们进行静态资源分发</p><p>并且DEBUG一定要改为False</p><p>我们使用nginx做静态文件转发</p><p>在django的配置文件中，加上</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">STATIC_URL = &#x27;/static/&#x27;STATICFILES_DIRS = [    os.path.join(BASE_DIR, &#x27;static&#x27;)]STATIC_ROOT = os.path.join(BASE_DIR, &#x27;feng_static&#x27;)  # 收集的到feng_static目录</span><br></pre></td></tr></table></figure><p>主要是STATIC_ROOT ，然后进行静态文件收集，django就会为我们收集所有的静态文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py collectstatic</span><br></pre></td></tr></table></figure><p>如果你部署之后发现django后台没有静态文件，那么你肯定是忘了收集静态文件</p><h3 id="导出数据库"><a href="#导出数据库" class="headerlink" title="导出数据库"></a>导出数据库</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -u root -p pro_blog &gt; blog.sql</span><br></pre></td></tr></table></figure><h3 id="推送代码"><a href="#推送代码" class="headerlink" title="推送代码"></a>推送代码</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push</span><br></pre></td></tr></table></figure><p>不会git的去网上找个教程练习一下，git很重要的哦！</p><h1 id="服务器准备"><a href="#服务器准备" class="headerlink" title="服务器准备"></a>服务器准备</h1><h2 id="拉取代码"><a href="#拉取代码" class="headerlink" title="拉取代码"></a>拉取代码</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone xxx</span><br></pre></td></tr></table></figure><h2 id="创建python虚拟环境"><a href="#创建python虚拟环境" class="headerlink" title="创建python虚拟环境"></a>创建python虚拟环境</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 安装虚拟环境的第三方包 virtualenvpip3 install virtualenv# 创建虚拟环境（虚拟环境一般放在项目根目录下）virtualenv fengfeng_blog_env# 激活虚拟环境source fengfeng_blog_env/bin/activate# 退出虚拟环境deactivate</span><br></pre></td></tr></table></figure><h2 id="下载三方模块"><a href="#下载三方模块" class="headerlink" title="下载三方模块"></a>下载三方模块</h2><p>在虚拟环境中导入requirements中的第三方模块</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -r requirements.txt</span><br></pre></td></tr></table></figure><h2 id="导入数据库"><a href="#导入数据库" class="headerlink" title="导入数据库"></a>导入数据库</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 在服务器中创建一个数据库create database fengfeng_blog;use fengfeng_blog# 导入数据source  blog.sql# mysql创建用户create user &#x27;fengfeng_blog&#x27;@&#x27;localhost&#x27; identified by &#x27;123456&#x27;;# 授权GRANT ALL ON fengfeng_blog.* TO &#x27;fengfeng_blog&#x27;@&#x27;localhost&#x27;;</span><br></pre></td></tr></table></figure><p>最后再看看配置文件中的数据库配置这些是否正确</p><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><p>先把DEBUG改为True</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py runserver 0.0.0.0:8000</span><br></pre></td></tr></table></figure><p>然后访问服务器的ip:8000看看能不能出来效果</p><p>如果不能出来，看看是不是防火墙没关</p><p>这一步的操作是为了查看项目能不能正常运行</p><h1 id="uwsgi配置"><a href="#uwsgi配置" class="headerlink" title="uwsgi配置"></a>uwsgi配置</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 先安装pip install uwsgi</span><br></pre></td></tr></table></figure><p>在我们通过Django创建django项目时，在子目录app01下已经帮我们生成的 wsgi.py文件。所以，我们只需要再创建uwsgi.ini配置文件即可，当然，uwsgi支持多种类型的配置文件，如xml，ini等。此处，使用ini类型的配置。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[uwsgi]# 开启主进程master = true# 指定uwsgi工作的进程数processes = 1# 指定工作的每个进程下的线程数threads = 2# 指定项目的目录chdir = /www/wwwroot/fengfeng-blog# wsgi.py文件的位置wsgi-file= %(chdir)/Fengfengblog/wsgi.py# 使用nginx这里就要用socketsocket = 127.0.0.1:8000# 日志  需要去创建这个文件logto = %(chdir)/logs/error.logchmod-socket = 660vacuum = truemax-requests = 1000# uwsgi的运行状态stats=%(chdir)/uwsgi.status# uwsgi的进程idpidfile=%(chdir)/uwsgi.pid</span><br></pre></td></tr></table></figure><p>运行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uwsgi --ini uwsgi.ini</span><br></pre></td></tr></table></figure><p>停止</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uwsgi --stop uwsgi.pid# 或者pkill -f uwsgi -9</span><br></pre></td></tr></table></figure><p>重启</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uwsgi --reload uwsgi.pid</span><br></pre></td></tr></table></figure><p>注意查看uwsgi的启动信息，如果有错，就要检查配置文件的参数是否设置有误。</p><h1 id="nginx配置"><a href="#nginx配置" class="headerlink" title="nginx配置"></a>nginx配置</h1><p>再接下来要做的就是修改nginx.conf配置文件。打开/etc/nginx/nginx.conf文件，添加如下内容。</p><p>注意哦，需要去对应的域名控制台做域名解析，解析到当前的服务器</p><p><img src="http://python.fengfengzhidao.com/pic/20220604211047.png" alt="img"></p><p>nginx做静态文件转发</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># nginx配置server &#123;    listen   80;    server_name xxx.fengfengzhidao.com;    location / &#123;        uwsgi_pass   127.0.0.1:8000;  # uwsgi运行的端口        include uwsgi_params;    &#125;    location /static&#123;      alias  /www/wwwroot/fengfeng-blog/static;  # 你收集的静态文件的位置    &#125;&#125;</span><br></pre></td></tr></table></figure><p>重启一下nginx，去访问客户机的ip，正常加载说明成功！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -s reload</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MarkDown的基本使用</title>
      <link href="/archives/2e726327.html"/>
      <url>/archives/2e726327.html</url>
      
        <content type="html"><![CDATA[<h1 id="MarkDown基础"><a href="#MarkDown基础" class="headerlink" title="MarkDown基础"></a>MarkDown基础</h1><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 标题名字（井号的个数代表标题的级数）</span></span><br></pre></td></tr></table></figure><h1 id="一级标题使用1个"><a href="#一级标题使用1个" class="headerlink" title="一级标题使用1个#"></a>一级标题使用1个#</h1><h2 id="二级标题使用2个"><a href="#二级标题使用2个" class="headerlink" title="二级标题使用2个#"></a>二级标题使用2个#</h2><h3 id="三级标题使用3个"><a href="#三级标题使用3个" class="headerlink" title="三级标题使用3个#"></a>三级标题使用3个#</h3><h4 id="四级标题使4用个"><a href="#四级标题使4用个" class="headerlink" title="四级标题使4用个#"></a>四级标题使4用个#</h4><h5 id="五级标题使用5个"><a href="#五级标题使用5个" class="headerlink" title="五级标题使用5个#"></a>五级标题使用5个#</h5><h6 id="六级标题使用6个"><a href="#六级标题使用6个" class="headerlink" title="六级标题使用6个#"></a>六级标题使用6个#</h6><p>####### 最多支持六级标题#</p><h2 id="文字"><a href="#文字" class="headerlink" title="文字"></a>文字</h2><h3 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这就是 ~~删除线~~ (使用波浪号)</span><br></pre></td></tr></table></figure><p>这就是 <del>删除线</del> (使用波浪号)</p><h3 id="斜体"><a href="#斜体" class="headerlink" title="斜体"></a>斜体</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这是用来 <span class="emphasis">*斜体*</span> 的 <span class="emphasis">_文本_</span></span><br></pre></td></tr></table></figure><p>这是用来 <em>斜体</em> 的 <em>文本</em></p><h3 id="加粗"><a href="#加粗" class="headerlink" title="加粗"></a>加粗</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这是用来 <span class="strong">**加粗**</span> 的 <span class="strong">__文本__</span></span><br></pre></td></tr></table></figure><p>这是用来 <strong>加粗</strong> 的 <strong>文本</strong></p><h3 id="斜体-加粗"><a href="#斜体-加粗" class="headerlink" title="斜体+加粗"></a>斜体+加粗</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这是用来 <span class="strong">**<span class="emphasis">*斜体+加粗*</span>**</span> 的 <span class="strong">__<span class="emphasis">_文本_</span>__</span></span><br></pre></td></tr></table></figure><p>这是用来 <em><strong>斜体+加粗</strong></em> 的 <em><strong>文本</strong></em></p><h3 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h3><p>下划线是HTML语法</p><p><code>下划线</code> <u>下划线(快捷键<code>command</code>+<code>u</code>，视频中所有的快捷键都是针对Mac系统，其他系统可自行查找)</u></p><h3 id="高亮（需勾选扩展语法）"><a href="#高亮（需勾选扩展语法）" class="headerlink" title="高亮（需勾选扩展语法）"></a>高亮（需勾选扩展语法）</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这是用来 ==斜体+加粗== 的文本</span><br></pre></td></tr></table></figure><p>这是用来 ==斜体+加粗== 的文本</p><h3 id="下标（需勾选扩展语法）"><a href="#下标（需勾选扩展语法）" class="headerlink" title="下标（需勾选扩展语法）"></a>下标（需勾选扩展语法）</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">水 H~2~O </span><br><span class="line">双氧水 H~2~O~2~ </span><br></pre></td></tr></table></figure><p>水 H<del>2</del>O </p><p>双氧水 H<del>2</del>O<del>2</del></p><h3 id="上标（需勾选扩展语法）"><a href="#上标（需勾选扩展语法）" class="headerlink" title="上标（需勾选扩展语法）"></a>上标（需勾选扩展语法）</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">面积 m^2^ </span><br><span class="line">体积 m^3^</span><br></pre></td></tr></table></figure><p>面积 m^2^<br>体积 m^3^</p><h3 id="表情符号"><a href="#表情符号" class="headerlink" title="表情符号"></a>表情符号</h3><p> Emoji 支持表情符号，你可以用系统默认的 Emoji 符号（ Windows 用户不一定支持，自己试下~）。 也可以用图片的表情，输入 <code>:</code> 将会出现智能提示。  </p><h4 id="一些表情例子"><a href="#一些表情例子" class="headerlink" title="一些表情例子"></a>一些表情例子</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">:smile: :laughing: :dizzy<span class="emphasis">_face: :sob: :cold_</span>sweat: :sweat<span class="emphasis">_smile:  :cry: :triumph: :heart_</span>eyes: :relaxed: :sunglasses: :weary:</span><br><span class="line"></span><br><span class="line">:+1: :-1: :100: :clap: :bell: :gift: :question: :bomb: :heart: :coffee: :cyclone: :bow: :kiss: :pray: :sweat<span class="emphasis">_drops: :hankey: :exclamation: :anger:</span></span><br><span class="line"><span class="emphasis"></span></span><br></pre></td></tr></table></figure><p>:smile: :laughing: :dizzy_face: :sob: :cold_sweat: :sweat_smile:  :cry: :triumph: :heart_eyes: :relaxed: :sunglasses: :weary: :+1: :-1: :100: :clap: :bell: :gift: :question: :bomb: :heart: :coffee: :cyclone: :bow: :kiss: :pray: :sweat_drops: :hankey: :exclamation: :anger:</p><p>(  Mac: <code>control</code>+<code>command</code>+<code>space</code>点选)</p><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><p>使用 <code>|</code> 来分隔不同的单元格，使用 <code>-</code> 来分隔表头和其他行：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">name | price</span><br><span class="line">--- | ---</span><br><span class="line">fried chicken | 19</span><br><span class="line">cola|5</span><br></pre></td></tr></table></figure><blockquote><p>为了使 Markdown 更清晰，<code>|</code> 和 <code>-</code> 两侧需要至少有一个空格（最左侧和最右侧的 <code>|</code> 外就不需要了）。</p></blockquote><table><thead><tr><th>name</th><th>price</th></tr></thead><tbody><tr><td>fried chicken</td><td>19</td></tr><tr><td>cola</td><td>5</td></tr></tbody></table><p>为了美观，可以使用空格对齐不同行的单元格，并在左右两侧都使用 <code>|</code> 来标记单元格边界，在表头下方的分隔线标记中加入 <code>:</code>，即可标记下方单元格内容的对齐方式：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">|    name       | price |</span><br><span class="line">| :------------ | :---: |</span><br><span class="line">| fried chicken | 19    |</span><br><span class="line">| cola          |  32   |</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">name</th><th align="center">price</th></tr></thead><tbody><tr><td align="left">fried chicken</td><td align="center">19</td></tr><tr><td align="left">cola</td><td align="center">32</td></tr></tbody></table><p>使用快捷键<code>command</code>+<code>opt</code>+<code>T</code>更方便(段落→表格→插入表格，即可查看快捷键)</p><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;“后悔创业”</span><br></pre></td></tr></table></figure><blockquote><p>“后悔创业”</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;也可以在引用中</span><br><span class="line">&gt;&gt;使用嵌套的引用</span><br></pre></td></tr></table></figure><blockquote><p>也可以在引用中</p><blockquote><p>使用嵌套的引用</p></blockquote></blockquote><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><h3 id="无序列表–符号-空格"><a href="#无序列表–符号-空格" class="headerlink" title="无序列表–符号 空格"></a>无序列表–符号 空格</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">*</span> 可以使用 <span class="code">`*`</span> 作为标记</span><br><span class="line"><span class="bullet">+</span> 也可以使用 <span class="code">`+`</span></span><br><span class="line"><span class="bullet">-</span> 或者 <span class="code">`-`</span></span><br></pre></td></tr></table></figure><ul><li>可以使用 <code>*</code> 作为标记</li></ul><ul><li>也可以使用 <code>+</code></li></ul><ul><li>或者 <code>-</code></li></ul><h3 id="有序列表–数字-空格"><a href="#有序列表–数字-空格" class="headerlink" title="有序列表–数字 . 空格"></a>有序列表–数字 <code>.</code> 空格</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 有序列表以数字和 <span class="code">`.`</span> 开始；</span><br><span class="line"><span class="bullet">3.</span> 数字的序列并不会影响生成的列表序列；</span><br><span class="line"><span class="bullet">4.</span> 但仍然推荐按照自然顺序（1.2.3...）编写。</span><br></pre></td></tr></table></figure><ol><li><p>有序列表以数字和 <code>.</code> 开始；</p></li><li><p>数字的序列并不会影响生成的列表序列；</p></li><li><p>但仍然推荐按照自然顺序（1.2.3…）编写。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">可以使用：数字\. 来取消显示为列表（用反斜杠进行转义）</span><br></pre></td></tr></table></figure></li></ol><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">```语言名称</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h3 id="行内代码"><a href="#行内代码" class="headerlink" title="行内代码"></a>行内代码</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">也可以通过 <span class="code">``，插入行内代码（`</span> 是 <span class="code">`Tab`</span> 键上边、数字 <span class="code">`1`</span> 键左侧的那个按键）：</span><br><span class="line"></span><br><span class="line">例如 <span class="code">`Markdown`</span></span><br></pre></td></tr></table></figure><p><code>Markdown</code></p><h3 id="转换规则"><a href="#转换规则" class="headerlink" title="转换规则"></a>转换规则</h3><p>代码块中的文本（包括 Markdown 语法）都会显示为原始内容</p><h2 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a>分隔线</h2><p>可以在一行中使用三个或更多的 <code>*</code>、<code>-</code> 或 <code>_</code> 来添加分隔线（``）：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"><span class="strong">**<span class="emphasis">*</span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="section">------</span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="section">___</span></span></span></span><br></pre></td></tr></table></figure><hr><hr><hr><h2 id="跳转"><a href="#跳转" class="headerlink" title="跳转"></a>跳转</h2><h3 id="外部跳转–超链接"><a href="#外部跳转–超链接" class="headerlink" title="外部跳转–超链接"></a>外部跳转–超链接</h3><p>格式为 <code>[link text](link)</code>。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">帮助文档</span>](<span class="link">https://support.typora.io/Links/#faq</span>)</span><br></pre></td></tr></table></figure><p><a href="https://support.typora.io/Links/#faq">帮助文档</a></p><h3 id="内部跳转–本文件内跳（Typora支持）"><a href="#内部跳转–本文件内跳（Typora支持）" class="headerlink" title="内部跳转–本文件内跳（Typora支持）"></a>内部跳转–本文件内跳（Typora支持）</h3><p>格式为 <code>[link text](#要去的目的地--标题）</code>。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">我想跳转</span>](<span class="link">#饼图（Pie）</span>)</span><br></pre></td></tr></table></figure><blockquote><p>Open Links in Typora</p><p>You can use <code>command+click</code> (macOS), or <code>ctrl+click</code> (Linux/Windows) on links in Typora to jump to target headings, or open them in Typora, or open in related apps.</p></blockquote><p><a href="#%E9%A5%BC%E5%9B%BE%EF%BC%88Pie%EF%BC%89">我想跳转</a></p><h3 id="自动链接"><a href="#自动链接" class="headerlink" title="自动链接"></a>自动链接</h3><p>使用 <code>&lt;&gt;</code> 包括的 URL 或邮箱地址会被自动转换为超链接：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml">&lt;https://www.baidu.com&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;123@email.com&gt;</span><br></pre></td></tr></table></figure><p><a href="https://www.baidu.com/">https://www.baidu.com</a></p><p><a href="mailto:123@email.com">123@email.com</a></p><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">自己起的图片名字</span>](<span class="link">图片地址或者图片本地存储的路径</span>)</span><br></pre></td></tr></table></figure><h3 id="网上的图片"><a href="#网上的图片" class="headerlink" title="网上的图片"></a>网上的图片</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">friedChicken</span>](<span class="link">https://ss0.bdstatic.com/94oJfD_bAAcT8t7mm9GUKT-xh_/timg?image&amp;quality=100&amp;size=b4000_4000&amp;sec=1580814517&amp;di=2630beac440e5dab0e44c7286a3b2b61&amp;src=http://imgsrc.baidu.com/forum/w=580/sign=12c730c4ff03738dde4a0c2a831ab073/9497794f9258d1091818e6d6d858ccbf6d814d1b.jpg</span>)</span><br></pre></td></tr></table></figure><h2 id="利用Markdown画图（需勾选扩展语法）"><a href="#利用Markdown画图（需勾选扩展语法）" class="headerlink" title="利用Markdown画图（需勾选扩展语法）"></a>利用Markdown画图（需勾选扩展语法）</h2><p>markdown画图也是轻量级的，功能并不全。</p><p>Mermaid 是一个用于画流程图、状态图、时序图、甘特图的库，使用 JS 进行本地渲染，广泛集成于许多 Markdown 编辑器中。Mermaid 作为一个使用 JS 渲染的库，生成的不是一个“图片”，而是一段 HTML 代码。</p><p>（不同的编辑器渲染的可能不一样）</p><h3 id="流程图-graph"><a href="#流程图-graph" class="headerlink" title="流程图(graph)"></a>流程图(graph)</h3><h4 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">graph 方向描述</span><br><span class="line"><span class="code">    图表中的其他语句...</span></span><br></pre></td></tr></table></figure><p>关键字graph表示一个流程图的开始，同时需要指定该图的方向。</p><p>其中“方向描述”为：</p><table><thead><tr><th align="left">用词</th><th align="left">含义</th></tr></thead><tbody><tr><td align="left">TB</td><td align="left">从上到下</td></tr><tr><td align="left">BT</td><td align="left">从下到上</td></tr><tr><td align="left">RL</td><td align="left">从右到左</td></tr><tr><td align="left">LR</td><td align="left">从左到右</td></tr></tbody></table><blockquote><p>T = TOP，B = BOTTOM，L = LEFT，R = RIGHT，D = DOWN</p></blockquote><p>最常用的布局方向是TB、LR。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">graph TB;</span><br><span class="line">  A--&gt;B</span><br><span class="line">  B--&gt;C</span><br><span class="line">  C--&gt;A</span><br><span class="line"> </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">graph TB;</span><br><span class="line">  A--&gt;B</span><br><span class="line">  B--&gt;C</span><br><span class="line">  C--&gt;A</span><br></pre></td></tr></table></figure><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">graph LR;</span><br><span class="line">  A--&gt;B</span><br><span class="line">  B--&gt;C</span><br><span class="line">  C--&gt;A</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">graph LR;</span><br><span class="line">  A--&gt;B</span><br><span class="line">  B--&gt;C</span><br><span class="line">  C--&gt;A</span><br></pre></td></tr></table></figure><h4 id="流程图常用符号及含义"><a href="#流程图常用符号及含义" class="headerlink" title="流程图常用符号及含义"></a>流程图常用符号及含义</h4><h5 id="节点形状"><a href="#节点形状" class="headerlink" title="节点形状"></a>节点形状</h5><table><thead><tr><th align="left">表述</th><th align="left">说明</th><th>含义</th></tr></thead><tbody><tr><td align="left">id[文字]</td><td align="left">矩形节点</td><td>表示过程，也就是整个流程中的一个环节</td></tr><tr><td align="left">id(文字)</td><td align="left">圆角矩形节点</td><td>表示开始和结束</td></tr><tr><td align="left">id((文字))</td><td align="left">圆形节点</td><td>表示连接。为避免流程过长或有交叉，可将流程切开。成对</td></tr><tr><td align="left">id{文字}</td><td align="left">菱形节点</td><td>表示判断、决策</td></tr><tr><td align="left">id&gt;文字]</td><td align="left">右向旗帜状节点</td><td></td></tr></tbody></table><p><strong>单向箭头线段</strong>：表示流程进行方向</p><blockquote><p>id即为节点的唯一标识，A~F 是当前节点名字，类似于变量名，画图时便于引用</p><p>括号内是节点中要显示的文字，默认节点的名字和显示的文字都为A</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">graph TB</span><br><span class="line">  A</span><br><span class="line">  B(圆角矩形节点)</span><br><span class="line">  C[矩形节点]</span><br><span class="line">  D((圆形节点))</span><br><span class="line">  E&#123;菱形节点&#125;</span><br><span class="line">  F&gt;右向旗帜状节点] </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">graph TB</span><br><span class="line">  A</span><br><span class="line">  B(圆角矩形节点)</span><br><span class="line">  C[矩形节点]</span><br><span class="line">  D((圆形节点))</span><br><span class="line">  E&#123;菱形节点&#125;</span><br><span class="line">  F&gt;右向旗帜状节点]</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">graph TB</span><br><span class="line"><span class="code">    begin(出门)--&gt; buy[买炸鸡]</span></span><br><span class="line"><span class="code">    buy --&gt; IsRemaining&#123;&quot;还有没有炸鸡？&quot;&#125;</span></span><br><span class="line"><span class="code">    IsRemaining --&gt;|有|happy[买完炸鸡开心]--&gt; goBack(回家)</span></span><br><span class="line"><span class="code">    IsRemaining --没有--&gt; sad[&quot;伤心&quot;]--&gt; goBack</span></span><br><span class="line"><span class="code">    </span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">graph TB</span><br><span class="line">    begin(出门)--&gt; buy[买炸鸡]</span><br><span class="line">    buy --&gt; IsRemaining&#123;&quot;还有没有炸鸡？&quot;&#125;</span><br><span class="line">    IsRemaining --&gt;|有|happy[买完炸鸡开心]--&gt; goBack(回家)</span><br><span class="line">    IsRemaining --没有--&gt; sad[&quot;伤心&quot;]--&gt; goBack</span><br><span class="line">    </span><br></pre></td></tr></table></figure><h5 id="连线"><a href="#连线" class="headerlink" title="连线"></a>连线</h5><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">graph TB</span><br><span class="line">  A1--&gt;B1</span><br><span class="line">  A2---B2</span><br><span class="line">  A3--text---B3</span><br><span class="line">  A4--text--&gt;B4</span><br><span class="line">  A5-.-B5</span><br><span class="line">  A6-.-&gt;B6</span><br><span class="line">  A7-.text.-B7</span><br><span class="line">  A8-.text.-&gt;B8</span><br><span class="line">  A9===B9</span><br><span class="line">  A10==&gt;B10</span><br><span class="line">  A11==text===B11</span><br><span class="line">  A12==text==&gt;B12</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">graph TB</span><br><span class="line">  A1--&gt;B1</span><br><span class="line">  A2---B2</span><br><span class="line">  A3--text---B3</span><br><span class="line">  A4--text--&gt;B4</span><br><span class="line">  A5-.-B5</span><br><span class="line">  A6-.-&gt;B6</span><br><span class="line">  A7-.text.-B7</span><br><span class="line">  A8-.text.-&gt;B8</span><br><span class="line">  A9===B9</span><br><span class="line">  A10==&gt;B10</span><br><span class="line">  A11==text===B11</span><br><span class="line">  A12==text==&gt;B12</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">graph TB</span><br><span class="line"> A ---B</span><br></pre></td></tr></table></figure><h5 id="子图表"><a href="#子图表" class="headerlink" title="子图表"></a>子图表</h5><p>使用以下语法添加子图表</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">subgraph 子图表名称</span><br><span class="line"><span class="code">    子图表中的描述语句...</span></span><br><span class="line"><span class="code">end</span></span><br></pre></td></tr></table></figure><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">graph TB</span><br><span class="line"><span class="code">  subgraph 买炸鸡前</span></span><br><span class="line"><span class="code">    begin(出门)--&gt; buy[出门买炸鸡]</span></span><br><span class="line"><span class="code">    end</span></span><br><span class="line"><span class="code">    buy --&gt; IsRemaining&#123;&quot;还有没有炸鸡？&quot;&#125;</span></span><br><span class="line"><span class="code">    IsRemaining --没有--&gt; sad[&quot;伤心&quot;]--&gt; goBack(回家)</span></span><br><span class="line"><span class="code">    IsRemaining --&gt;|有|happy[买完炸鸡开心]--&gt; goBack</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">graph TB</span><br><span class="line">  subgraph 买炸鸡前</span><br><span class="line">    begin(出门)--&gt; buy[出门买炸鸡]</span><br><span class="line">    end</span><br><span class="line">    buy --&gt; IsRemaining&#123;&quot;还有没有炸鸡？&quot;&#125;</span><br><span class="line">    IsRemaining --没有--&gt; sad[&quot;伤心&quot;]--&gt; goBack(回家)</span><br><span class="line">    IsRemaining --&gt;|有|happy[买完炸鸡开心]--&gt; goBack</span><br></pre></td></tr></table></figure><h3 id="序列图-sequence-diagram"><a href="#序列图-sequence-diagram" class="headerlink" title="序列图(sequence diagram)"></a>序列图(sequence diagram)</h3><h4 id="概述-1"><a href="#概述-1" class="headerlink" title="概述"></a>概述</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sequenceDiagram </span><br><span class="line"><span class="code">[参与者1][消息线][参与者2]:消息体</span></span><br><span class="line"><span class="code">    ...</span></span><br></pre></td></tr></table></figure><blockquote><p><code>sequenceDiagram</code> 为每幅时序图的固定开头</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line"><span class="code">Title: 买炸鸡</span></span><br><span class="line"><span class="code">    救救-&gt;&gt;炸鸡店小哥: 还有炸鸡吗？</span></span><br><span class="line"><span class="code">    炸鸡店小哥--&gt;&gt;救救: 没有，要现炸</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">Title: 买炸鸡</span><br><span class="line">    救救-&gt;&gt;炸鸡店小哥: 还有炸鸡吗？</span><br><span class="line">    炸鸡店小哥--&gt;&gt;救救: 没有，要现炸</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="参与者（participant）"><a href="#参与者（participant）" class="headerlink" title="参与者（participant）"></a>参与者（participant）</h4><p>传统时序图概念中参与者有角色和类对象之分，但这里我们不做此区分，用参与者表示一切参与交互的事物，可以是人、类对象、系统等形式。中间竖直的线段从上至下表示时间的流逝。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line"><span class="code">    participant 参与者 1</span></span><br><span class="line"><span class="code">    participant 参与者 2</span></span><br><span class="line"><span class="code">    ...</span></span><br><span class="line"><span class="code">    participant 简称 as 参与者 3 #该语法可以在接下来的描述中使用简称来代替参与者 3</span></span><br></pre></td></tr></table></figure><blockquote><p><code>participant &lt;参与者名称&gt;</code> 声明参与者，语句次序即为参与者横向排列次序。</p></blockquote><h4 id="消息线"><a href="#消息线" class="headerlink" title="消息线"></a>消息线</h4><table><thead><tr><th align="left">类型</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">-&gt;</td><td align="left">无箭头的实线</td></tr><tr><td align="left">–&gt;</td><td align="left">无箭头的虚线</td></tr><tr><td align="left">-&gt;&gt;</td><td align="left">有箭头的实线（主动发出消息）</td></tr><tr><td align="left">–-&gt;&gt;</td><td align="left">有箭头的虚线（响应）</td></tr><tr><td align="left">-x</td><td align="left">末端为叉的实线（表示异步）</td></tr><tr><td align="left">–x</td><td align="left">末端为叉的虚线（表示异步）</td></tr></tbody></table><h4 id="处理中-激活框"><a href="#处理中-激活框" class="headerlink" title="处理中-激活框"></a>处理中-激活框</h4><p>从消息接收方的时间线上标记一小段时间，表示对消息进行处理的时间间隔。</p><p>在消息线末尾增加 <code>+</code> ，则消息接收者进入当前消息的“处理中”状态；<br>在消息线末尾增加 <code>-</code> ，则消息接收者离开当前消息的“处理中”状态。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line"><span class="code">    participant 99 as 救救</span></span><br><span class="line"><span class="code">    participant seller as 炸鸡店小哥</span></span><br><span class="line"><span class="code">    99 -&gt;&gt; seller: 还有炸鸡吗？</span></span><br><span class="line"><span class="code">    seller --&gt;&gt; 99: 没有，要现炸。</span></span><br><span class="line"><span class="code">    99 -x +seller:给我炸！</span></span><br><span class="line"><span class="code">    seller --&gt;&gt; -99: 您的炸鸡好了！</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">    participant 99 as 救救</span><br><span class="line">    participant seller as 炸鸡店小哥</span><br><span class="line">    99 -&gt;&gt; seller: 还有炸鸡吗？</span><br><span class="line">    seller --&gt;&gt; 99: 没有，要现炸。</span><br><span class="line">    99 -x +seller:给我炸！</span><br><span class="line">    seller --&gt;&gt; -99: 您的炸鸡好了！</span><br><span class="line">    </span><br></pre></td></tr></table></figure><h4 id="注解（note）"><a href="#注解（note）" class="headerlink" title="注解（note）"></a>注解（note）</h4><p>语法如下</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Note 位置表述 参与者: 标注文字</span><br></pre></td></tr></table></figure><p>其中位置表述可以为</p><table><thead><tr><th align="left">表述</th><th align="left">含义</th></tr></thead><tbody><tr><td align="left">right of</td><td align="left">右侧</td></tr><tr><td align="left">left of</td><td align="left">左侧</td></tr><tr><td align="left">over</td><td align="left">在当中，可以横跨多个参与者</td></tr></tbody></table><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line"><span class="code">    participant 99 as 救救</span></span><br><span class="line"><span class="code">    participant seller as 炸鸡店小哥</span></span><br><span class="line"><span class="code">    Note over 99,seller : 热爱炸鸡</span></span><br><span class="line"><span class="code">    Note left of 99 : 女</span></span><br><span class="line"><span class="code">    Note right of seller : 男</span></span><br><span class="line"><span class="code">    99 -&gt;&gt; seller: 还有炸鸡吗？</span></span><br><span class="line"><span class="code">    seller --&gt;&gt; 99: 没有，要现炸。</span></span><br><span class="line"><span class="code">    99 -x +seller : 给我炸！</span></span><br><span class="line"><span class="code">    seller --&gt;&gt; -99: 您的炸鸡好了！</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">    participant 99 as 救救</span><br><span class="line">    participant seller as 炸鸡店小哥</span><br><span class="line">    Note over 99,seller : 热爱炸鸡</span><br><span class="line">    Note left of 99 : 女</span><br><span class="line">    Note right of seller : 男</span><br><span class="line">    99 -&gt;&gt; seller: 还有炸鸡吗？</span><br><span class="line">    seller --&gt;&gt; 99: 没有，要现炸。</span><br><span class="line">    99 -x +seller : 给我炸！</span><br><span class="line">    seller --&gt;&gt; -99: 您的炸鸡好了！</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="循环（loop）"><a href="#循环（loop）" class="headerlink" title="循环（loop）"></a>循环（loop）</h4><p>在条件满足时，重复发出消息序列。（相当于编程语言中的 while 语句。）</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line"><span class="code">    participant 99 as 救救</span></span><br><span class="line"><span class="code">    participant seller as 炸鸡店小哥</span></span><br><span class="line"><span class="code">   </span></span><br><span class="line"><span class="code">    99 -&gt;&gt; seller: 还有炸鸡吗？</span></span><br><span class="line"><span class="code">    seller --&gt;&gt; 99: 没有，要现炸。</span></span><br><span class="line"><span class="code">    99 -&gt;&gt; +seller:给我炸！</span></span><br><span class="line"><span class="code">    loop 三分钟一次</span></span><br><span class="line"><span class="code">        99 -&gt;&gt; seller : 我的炸鸡好了吗？</span></span><br><span class="line"><span class="code">        seller --&gt;&gt; 99 : 正在炸</span></span><br><span class="line"><span class="code">    end</span></span><br><span class="line"><span class="code">    seller --&gt;&gt; -99: 您的炸鸡好了！</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">    participant 99 as 救救</span><br><span class="line">    participant seller as 炸鸡店小哥</span><br><span class="line">   </span><br><span class="line">    99 -&gt;&gt; seller: 还有炸鸡吗？</span><br><span class="line">    seller --&gt;&gt; 99: 没有，要现炸。</span><br><span class="line">    99 -&gt;&gt; +seller:给我炸！</span><br><span class="line">    loop 三分钟一次</span><br><span class="line">        99 -&gt;&gt; seller : 我的炸鸡好了吗？</span><br><span class="line">        seller --&gt;&gt; 99 : 正在炸</span><br><span class="line">    end</span><br><span class="line">    seller --&gt;&gt; -99: 您的炸鸡好了！</span><br></pre></td></tr></table></figure><h4 id="选择（alt）"><a href="#选择（alt）" class="headerlink" title="选择（alt）"></a>选择（alt）</h4><p>在多个条件中作出判断，每个条件将对应不同的消息序列。（相当于 if 及 else if 语句。）</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">sequenceDiagram    </span><br><span class="line"><span class="code">    participant 99 as 救救</span></span><br><span class="line"><span class="code">    participant seller as 炸鸡店小哥</span></span><br><span class="line"><span class="code">    99 -&gt;&gt; seller : 现在就多少只炸好的炸鸡？</span></span><br><span class="line"><span class="code">    seller --&gt;&gt; 99 : 可卖的炸鸡数</span></span><br><span class="line"><span class="code">    </span></span><br><span class="line"><span class="code">    alt 可卖的炸鸡数 &gt; 3</span></span><br><span class="line"><span class="code">        99 -&gt;&gt; seller : 买三只！</span></span><br><span class="line"><span class="code">    else 1 &lt; 可卖的炸鸡数 &lt; 3</span></span><br><span class="line"><span class="code">        99 -&gt;&gt; seller : 有多少买多少</span></span><br><span class="line"><span class="code">    else 可卖的炸鸡数 &lt; 1</span></span><br><span class="line"><span class="code">        99 -&gt;&gt; seller : 那我明天再来</span></span><br><span class="line"><span class="code">    end</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">    seller --&gt;&gt; 99 : 欢迎下次光临</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">sequenceDiagram    </span><br><span class="line">    participant 99 as 救救</span><br><span class="line">    participant seller as 炸鸡店小哥</span><br><span class="line">    99 -&gt;&gt; seller : 现在就多少只炸好的炸鸡？</span><br><span class="line">    seller --&gt;&gt; 99 : 可卖的炸鸡数</span><br><span class="line">    </span><br><span class="line">    alt 可卖的炸鸡数 &gt; 3</span><br><span class="line">        99 -&gt;&gt; seller : 买三只！</span><br><span class="line">    else 1 &lt; 可卖的炸鸡数 &lt; 3</span><br><span class="line">        99 -&gt;&gt; seller : 有多少买多少</span><br><span class="line">    else 可卖的炸鸡数 &lt; 1</span><br><span class="line">        99 -&gt;&gt; seller : 那我明天再来</span><br><span class="line">    end</span><br><span class="line"></span><br><span class="line">    seller --&gt;&gt; 99 : 欢迎下次光临</span><br></pre></td></tr></table></figure><h4 id="可选（opt）"><a href="#可选（opt）" class="headerlink" title="可选（opt）"></a>可选（opt）</h4><p>在某条件满足时执行消息序列，否则不执行。相当于单个分支的 if 语句。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line"><span class="code">    participant 99 as 救救</span></span><br><span class="line"><span class="code">    participant seller as 炸鸡店小哥</span></span><br><span class="line"><span class="code">    99 -&gt;&gt; seller : 买炸鸡</span></span><br><span class="line"><span class="code">    opt 全都卖完了</span></span><br><span class="line"><span class="code">        seller --&gt;&gt; 99 : 下次再来</span></span><br><span class="line"><span class="code">    end</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">    participant 99 as 救救</span><br><span class="line">    participant seller as 炸鸡店小哥</span><br><span class="line">    99 -&gt;&gt; seller : 买炸鸡</span><br><span class="line">    opt 全都卖完了</span><br><span class="line">        seller --&gt;&gt; 99 : 下次再来</span><br><span class="line">    end</span><br></pre></td></tr></table></figure><h4 id="并行（Par）"><a href="#并行（Par）" class="headerlink" title="并行（Par）"></a>并行（Par）</h4><p>将消息序列分成多个片段，这些片段并行执行。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">   participant 99 as 救救</span><br><span class="line">   participant seller as 炸鸡店小哥</span><br><span class="line">   </span><br><span class="line"><span class="code">    99 -&gt;&gt; seller : 一个炸鸡，一杯可乐！</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">    par 并行执行</span></span><br><span class="line"><span class="code">        seller -&gt;&gt; seller : 装可乐</span></span><br><span class="line"><span class="code">    and</span></span><br><span class="line"><span class="code">        seller -&gt;&gt; seller : 炸炸鸡</span></span><br><span class="line"><span class="code">    end</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">    seller --&gt;&gt; 99 : 您的炸鸡好了！</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">   participant 99 as 救救</span><br><span class="line">   participant seller as 炸鸡店小哥</span><br><span class="line">   </span><br><span class="line">    99 -&gt;&gt; seller : 一个炸鸡，一杯可乐！</span><br><span class="line"></span><br><span class="line">    par 并行执行</span><br><span class="line">        seller -&gt;&gt; seller : 装可乐</span><br><span class="line">    and</span><br><span class="line">        seller -&gt;&gt; seller : 炸炸鸡</span><br><span class="line">    end</span><br><span class="line"></span><br><span class="line">    seller --&gt;&gt; 99 : 您的炸鸡好了！</span><br></pre></td></tr></table></figure><blockquote><p><a href="http://support.typora.io/Draw-Diagrams-With-Markdown/">Typora支持mermaid的官方链接</a></p></blockquote><h3 id="甘特图（gantt）"><a href="#甘特图（gantt）" class="headerlink" title="甘特图（gantt）"></a>甘特图（gantt）</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> title 标题</span><br><span class="line">dateFormat 日期格式</span><br><span class="line">section 部分名</span><br><span class="line">任务名:参数一, 参数二, 参数三, 参数四，参数五</span><br><span class="line"></span><br><span class="line"> //参数一：crit（是否重要，红框框） 或者 不填</span><br><span class="line"> //参数二：done（已完成）、active（正在进行） 或者 不填(表示为待完成状态)</span><br><span class="line"> //参数三：取小名 或者 不填</span><br><span class="line"> //参数四：任务开始时间</span><br><span class="line"> //参数五：任务结束时间</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://mermaid-js.github.io/mermaid/#/gantt">官方教程</a></p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">gantt</span><br><span class="line">       dateFormat  YYYY-MM-DD</span><br><span class="line">       title Adding GANTT diagram functionality to mermaid</span><br><span class="line"></span><br><span class="line">       section A section</span><br><span class="line">       Completed task            :done,    des1, 2014-01-06,2014-01-08</span><br><span class="line">       Active task               :active,  des2, 2014-01-09, 3d</span><br><span class="line">       Future task               :         des3, after des2, 5d</span><br><span class="line">       Future task2              :         des4, after des3, 5d</span><br><span class="line"></span><br><span class="line">       section Critical tasks</span><br><span class="line">       Completed task in the critical line :crit, done, 2014-01-06,24h</span><br><span class="line">       Implement parser and jison          :crit, done, after des1, 2d</span><br><span class="line">       Create tests for parser             :crit, active, 3d</span><br><span class="line">       Future task in critical line        :crit, 5d</span><br><span class="line">       Create tests for renderer           :2d</span><br><span class="line">       Add to mermaid                      :1d</span><br><span class="line"></span><br><span class="line">       section Documentation</span><br><span class="line">       Describe gantt syntax               :active, a1, after des1, 3d</span><br><span class="line">       Add gantt diagram to demo page      :after a1  , 20h</span><br><span class="line">       Add another diagram to demo page    :doc1, after a1  , 48h</span><br><span class="line"></span><br><span class="line">       section Last section</span><br><span class="line">       Describe gantt syntax               :after doc1, 3d</span><br><span class="line">       Add gantt diagram to demo page      :20h</span><br><span class="line">       Add another diagram to demo page    :48h</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">gantt</span><br><span class="line">       dateFormat  YYYY-MM-DD</span><br><span class="line">       title Adding GANTT diagram functionality to mermaid</span><br><span class="line"></span><br><span class="line">       section A section</span><br><span class="line">       Completed task            :done,    des1, 2014-01-06,2014-01-08</span><br><span class="line">       Active task               :active,  des2, 2014-01-09, 3d</span><br><span class="line">       Future task               :         des3, after des2, 5d</span><br><span class="line">       Future task2              :         des4, after des3, 5d</span><br><span class="line"></span><br><span class="line">       section Critical tasks</span><br><span class="line">       Completed task in the critical line :crit, done, 2014-01-06,24h</span><br><span class="line">       Implement parser and jison          :crit, done, after des1, 2d</span><br><span class="line">       Create tests for parser             :crit, active, 3d</span><br><span class="line">       Future task in critical line        :crit, 5d</span><br><span class="line">       Create tests for renderer           :2d</span><br><span class="line">       Add to mermaid                      :1d</span><br><span class="line"></span><br><span class="line">       section Documentation</span><br><span class="line">       Describe gantt syntax               :active, a1, after des1, 3d</span><br><span class="line">       Add gantt diagram to demo page      :after a1  , 20h</span><br><span class="line">       Add another diagram to demo page    :doc1, after a1  , 48h</span><br><span class="line"></span><br><span class="line">       section Last section</span><br><span class="line">       Describe gantt syntax               :after doc1, 3d</span><br><span class="line">       Add gantt diagram to demo page      :20h</span><br><span class="line">       Add another diagram to demo page    :48h</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo 搭建个人博客的基本步骤</title>
      <link href="/archives/0.html"/>
      <url>/archives/0.html</url>
      
        <content type="html"><![CDATA[<h1 id="hexo-搭建个人博客"><a href="#hexo-搭建个人博客" class="headerlink" title="hexo 搭建个人博客"></a>hexo 搭建个人博客</h1><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ul><li><ul><li><p><a href="#hexo%E7%9A%84%E5%AE%89%E8%A3%85">hexo的安装</a></p><pre><code>*   *   [1.安装hexo](#1安装hexo)    *   [2.查看是否安装成功](#2查看是否安装成功)    *   [3.到我的博客目录执行初始化文件](#3到我的博客目录执行初始化文件)    *   [4cd到blog目录下安装依赖](#4cd到blog目录下安装依赖)    *   [5运行](#5运行)    *   [6.注意 终端打开的文件目录](#6注意-终端打开的文件目录)</code></pre></li><li><p><a href="#%E5%8F%91%E5%B8%83%E5%88%B0github">发布到gitHub</a></p><ul><li><ul><li><p>  <a href="#1%E6%96%B0%E5%BB%BA%E4%B8%80%E4%B8%AA%E9%A1%B9%E7%9B%AE">1.新建一个项目</a></p></li><li><p>  <a href="#2%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0git">2.配置本地git</a></p></li><li><p>  <a href="#3%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6">3.配置本地文件</a></p></li><li><p>  <a href="#4%E5%88%B0%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2blog%E7%9B%AE%E5%BD%95%E4%B8%8B%E5%AE%89%E8%A3%85%E6%8F%92%E4%BB%B6">4.到我的博客/blog目录下安装插件</a></p></li><li><p>  <a href="#5%E4%B8%8A%E4%BC%A0%E5%AF%86%E4%BB%A4">5.上传密令</a></p></li></ul></li></ul></li></ul></li><li><p><a href="#%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E4%BB%A5%E5%8F%8A%E5%B8%B8%E7%94%A8%E5%AF%86%E4%BB%A4">配置文件以及常用密令</a></p><ul><li><ul><li><ul><li><p><a href="#1%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6">1.配置文件</a></p><ul><li>  <a href="#2%E5%B8%B8%E7%94%A8%E5%AF%86%E4%BB%A4">2.常用密令</a></li></ul></li></ul></li></ul></li><li><p><a href="#%E4%B8%BB%E9%A2%98%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8">主题的安装和使用</a></p><ul><li><ul><li><p>  <a href="#butterfly%E4%B8%BB%E9%A2%98%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8">butterfly主题的安装和使用</a></p></li><li><p>  <a href="#%E5%85%B6%E4%BB%96%E4%B8%BB%E9%A2%98%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8">其他主题的安装和使用</a></p></li></ul></li><li><p>  <a href="#butterfly%E4%B8%BB%E9%A2%98%E7%9A%84%E9%85%8D%E7%BD%AE">butterfly主题的配置</a></p></li></ul></li><li><p><a href="#git%E7%9A%84%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6">git的版本控制</a></p><ul><li><ul><li><p>  <a href="#%E4%B8%BA%E4%BA%86%E8%83%BD%E8%BF%9B%E8%A1%8C%E7%89%88%E6%9C%AC%E5%9B%9E%E9%80%80%E4%BB%A5%E5%8F%8A%E9%98%B2%E6%AD%A2%E4%BB%A3%E7%A0%81%E4%B8%A2%E5%A4%B1">为了能进行版本回退以及防止代码丢失</a></p></li><li><p>  <a href="#1%E5%9C%A8github-%E4%B8%8A%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%96%B0%E4%BB%93%E5%BA%93%E7%A7%81%E6%9C%89%E7%9A%84%E7%94%A8%E6%9D%A5%E5%AD%98%E6%94%BE%E6%BA%90%E7%A0%81">1.在github 上创建一个新仓库，私有的用来存放源码</a></p></li><li><p>  <a href="#2git%E4%B8%8A%E4%BC%A0">2.git上传</a></p></li></ul></li></ul></li></ul></li></ul><h2 id="hexo的安装"><a href="#hexo的安装" class="headerlink" title="hexo的安装"></a>hexo的安装</h2><h4 id="1-安装hexo"><a href="#1-安装hexo" class="headerlink" title="1.安装hexo"></a>1.安装hexo</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo -g</span><br></pre></td></tr></table></figure><h4 id="2-查看是否安装成功"><a href="#2-查看是否安装成功" class="headerlink" title="2.查看是否安装成功"></a>2.查看是否安装成功</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo version</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="3-到我的博客目录执行初始化文件"><a href="#3-到我的博客目录执行初始化文件" class="headerlink" title="3.到我的博客目录执行初始化文件"></a>3.到我的博客目录执行初始化文件</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd 目录 hexo init blog</span><br></pre></td></tr></table></figure><h4 id="4cd到blog目录下安装依赖"><a href="#4cd到blog目录下安装依赖" class="headerlink" title="4cd到blog目录下安装依赖"></a>4cd到blog目录下安装依赖</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd blog</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><h4 id="5运行"><a href="#5运行" class="headerlink" title="5运行"></a>5运行</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo serve</span><br></pre></td></tr></table></figure><h4 id="6-注意-终端打开的文件目录"><a href="#6-注意-终端打开的文件目录" class="headerlink" title="6.注意 终端打开的文件目录"></a>6.注意 终端打开的文件目录</h4><h2 id="发布到gitHub"><a href="#发布到gitHub" class="headerlink" title="发布到gitHub"></a>发布到gitHub</h2><h4 id="1-新建一个项目"><a href="#1-新建一个项目" class="headerlink" title="1.新建一个项目"></a>1.新建一个项目</h4><p><img src="https://cdn.jsdelivr.net/gh/liyu-mm/picgodome/imgimage_3Dxy_v77Jn.png"></p><h4 id="2-配置本地git"><a href="#2-配置本地git" class="headerlink" title="2.配置本地git"></a>2.配置本地git</h4><p><img src="https://cdn.jsdelivr.net/gh/liyu-mm/picgodome/imgimage_yVDXx0lXMX.png"></p><h4 id="3-配置本地文件"><a href="#3-配置本地文件" class="headerlink" title="3.配置本地文件"></a>3.配置本地文件</h4><p><img src="https://cdn.jsdelivr.net/gh/liyu-mm/picgodome/imgimage_QUq6LhgvJ5.png"></p><h4 id="4-到我的博客-blog目录下安装插件"><a href="#4-到我的博客-blog目录下安装插件" class="headerlink" title="4.到我的博客/blog目录下安装插件"></a>4.到我的博客/blog目录下安装插件</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h4 id="5-上传密令"><a href="#5-上传密令" class="headerlink" title="5.上传密令"></a>5.上传密令</h4><p>1.清除缓存</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure><p>2.生成本地文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><p>3.上传本地</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>4.上传github</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>5访问博客地址</p><p>输入网址 用户名.github.io</p><h1 id="配置文件以及常用密令"><a href="#配置文件以及常用密令" class="headerlink" title="配置文件以及常用密令"></a>配置文件以及常用密令</h1><h4 id="1-配置文件"><a href="#1-配置文件" class="headerlink" title="1.配置文件"></a>1.配置文件</h4><p><img src="https://cdn.jsdelivr.net/gh/liyu-mm/picgodome/imgimage_FCjNXJtrCn.png"></p><h4 id="2-常用密令"><a href="#2-常用密令" class="headerlink" title="2.常用密令"></a>2.常用密令</h4><p>1.清除缓存</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure><p>2.生成本地文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><p>3.上传本地</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>4.上传github</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><h2 id="主题的安装和使用"><a href="#主题的安装和使用" class="headerlink" title="主题的安装和使用"></a>主题的安装和使用</h2><h4 id="butterfly主题的安装和使用"><a href="#butterfly主题的安装和使用" class="headerlink" title="butterfly主题的安装和使用"></a>butterfly主题的安装和使用</h4><p>1.去github搜索butterfly</p><p>2.找到安装文档</p><p><img src="https://cdn.jsdelivr.net/gh/liyu-mm/picgodome/imgimage_i4Mjc-8kUN.png"></p><p>3.在bong目录下运行</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-theme-butterfly</span><br></pre></td></tr></table></figure><p>4.改成你的主题名</p><p><img src="https://cdn.jsdelivr.net/gh/liyu-mm/picgodome/imgimage_OY2q_kCvXC.png"></p><h4 id="其他主题的安装和使用"><a href="#其他主题的安装和使用" class="headerlink" title="其他主题的安装和使用"></a>其他主题的安装和使用</h4><p>1.搜索你想要安装的主题</p><p>2.找到安装文档</p><p>3.在bong目录下运行安装文件</p><p>4.theme改成你的主题名</p><h3 id="butterfly主题的配置"><a href="#butterfly主题的配置" class="headerlink" title="butterfly主题的配置"></a>butterfly主题的配置</h3><p>页面主题配置就跟着文档走就OK啦</p><p><a href="https://butterfly.js.org/posts/21cfbf15/">https://butterfly.js.org/posts/21cfbf15/</a></p><h2 id="git的版本控制"><a href="#git的版本控制" class="headerlink" title="git的版本控制"></a>git的版本控制</h2><h4 id="为了能进行版本回退以及防止代码丢失"><a href="#为了能进行版本回退以及防止代码丢失" class="headerlink" title="为了能进行版本回退以及防止代码丢失"></a>为了能进行版本回退以及防止代码丢失</h4><h4 id="1-在github-上创建一个新仓库，私有的用来存放源码"><a href="#1-在github-上创建一个新仓库，私有的用来存放源码" class="headerlink" title="1.在github 上创建一个新仓库，私有的用来存放源码"></a>1.在github 上创建一个新仓库，私有的用来存放源码</h4><h4 id="2-git上传"><a href="#2-git上传" class="headerlink" title="2.git上传"></a>2.git上传</h4><p>1.现在blog文件夹下面执行 git init 初始化文件</p><p>2.在根目录新建一个文件.gitignore用来忽略上传内容</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">.<span class="property">DS_Store</span></span><br><span class="line"><span class="title class_">Thumbs</span>.<span class="property">db</span></span><br><span class="line">db.<span class="property">json</span></span><br><span class="line">*.<span class="property">log</span></span><br><span class="line">node_modules/</span><br><span class="line">public/</span><br><span class="line">.<span class="property">deploy</span>*/</span><br><span class="line">.<span class="property">vscode</span>/</span><br><span class="line"><span class="regexp">/.idea/</span></span><br><span class="line">.<span class="property">deploy_git</span>*/</span><br><span class="line">.<span class="property">idea</span></span><br><span class="line">themes/butterfly/.<span class="property">git</span></span><br></pre></td></tr></table></figure><p>3.根据github 上的提示上传代码</p><p>4.如果删除恢复代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone 代码地址</span><br></pre></td></tr></table></figure><p>安装依赖</p>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
